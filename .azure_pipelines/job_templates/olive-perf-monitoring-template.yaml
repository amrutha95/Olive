# Olive performance monitoring template on Azure DevOps

parameters:
  name: ''
  pool: ''

jobs:
- job: ${{parameters.name}}_Examples_performance_monitoring_olive
  timeoutInMinutes: 300
  pool:
    name: ${{ parameters.pool}}
  strategy:
    matrix:
      ${{ insert }}: ${{ parameters.examples }}
  variables:
    WINDOWS: ${{ parameters.windows }}
    runCodesignValidationInjection: false

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: 3.8
    displayName: Use Python 3.8

  - script: python -m pip install .[$(device)]
    displayName: Install Olive

  - task: AzureCLI@1
    inputs:
      azureSubscription: $(OLIVE_RG_SERVICE_CONNECTION)
      scriptLocation: 'inlineScript'
      inlineScript: make perf-monitoring PIPELINE=True WINDOWS=$(WINDOWS) PERF_MONITORING_SCRIPT_NAME=perf_monitoring_models_cpu
    displayName: performance monitoring
    env:
      OLIVEWHEELS_STORAGE_CONNECTION_STRING: $(olive-wheels-storage-connection-string)
      WORKSPACE_SUBSCRIPTION_ID: $(workspace-subscription-id)
      WORKSPACE_RESOURCE_GROUP: $(workspace-resource-group)
      WORKSPACE_NAME: $(workspace-name)
      TEST_MODEL: $(testModel)


  - task: ComponentGovernanceComponentDetection@0
    inputs:
      scanType: 'Register'
      verbosity: 'Verbose'
      alertWarningLevel: 'High'
    displayName: Component Detection

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/*TestOlive*.xml'
      testRunTitle: '$(Build.BuildNumber)[$(Agent.JobName)]'
    displayName: Upload pipeline run test results

  - script: make clean WINDOWS=$(WINDOWS)
    condition: always()
    displayName: Clean remaining artifacts
